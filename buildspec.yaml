version: 0.2

env:
  git-credential-helper: yes

phases:
  install:
    on-failure: ABORT
    commands:
      - mvn clean install
  pre_build:
    on-failure: ABORT
    commands:
      - export VERSION=$(echo ${CODEBUILD_BUILD_NUMBER})
  build:
    on-failure: ABORT
    commands:
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ECR_REPO
      - docker build -t springboot-cicd-api:$VERSION .
      - docker tag springboot-cicd-api:$VERSION $ECR_REPO:$VERSION
      - docker tag springboot-cicd-api:$VERSION $ECR_REPO:latest
  post_build:
    on-failure: ABORT
    commands:
      - docker push $ECR_REPO:$VERSION
      - docker push $ECR_REPO:latest
#      - CREDENTIALS=$(aws sts assume-role --role-arn arn:aws:iam::891709250373:role/test-springboot-pipeline-eks2022040611190739070000000b --role-session-name codebuild-kubectl --duration-seconds 900)
#      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
#      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
#      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
#      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
#      - aws eks update-kubeconfig --name $EKS_CLUSTER
#      - envsubst < api.yaml | kubectl apply -f -
