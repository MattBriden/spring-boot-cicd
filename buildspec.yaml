version: 0.2

env:
  git-credential-helper: yes

phases:
  install:
    on-failure: ABORT
    commands:
      - mvn clean install
  build:
    on-failure: ABORT
    commands:
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 891709250373.dkr.ecr.us-east-1.amazonaws.com
      - docker build -t springboot-cicd-api:latest .
      - docker tag springboot-cicd-api:latest 891709250373.dkr.ecr.us-east-1.amazonaws.com/springboot-cicd-api:latest
  post_build:
    on-failure: ABORT
    commands:
      - docker push 891709250373.dkr.ecr.us-east-1.amazonaws.com/springboot-cicd-api:latest
      - CREDENTIALS=$(aws sts assume-role --role-arn arn:aws:iam::891709250373:role/test-springboot-pipeline-eks2022040611190739070000000b --role-session-name codebuild-kubectl --duration-seconds 900)
      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      - aws eks update-kubeconfig --name test-springboot-pipeline-eks
      - kubectl apply -f api.yaml
